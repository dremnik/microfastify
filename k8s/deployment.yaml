apiVersion: apps/v1
kind: Deployment
metadata:
  name: microfastify
  namespace: default
  labels:
    app: microfastify
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: microfastify
  template:
    metadata:
      labels:
        app: microfastify
        version: v1
    spec:
      # Security context for the pod
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: microfastify
          image: ghcr.io/dremnik/microfastify:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          # Environment variables
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "8080"
            - name: HOST
              value: "0.0.0.0"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: microfastify-secrets
                  key: database-url
            - name: AUTH_KEYS
              valueFrom:
                secretKeyRef:
                  name: microfastify-secrets
                  key: auth-keys
          # Resource limits - testing deployment with smaller resources
          resources:
            requests:
              memory: "128Mi"
              cpu: "500m"       # 0.5 vCPU for testing
            limits:
              memory: "256Mi"
              cpu: "500m"       # 0.5 vCPU max
          # Liveness probe
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          # Readiness probe
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          # Security context for the container
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
          # Volume mounts if needed
          volumeMounts:
            - name: temp
              mountPath: /tmp
      # Volumes
      volumes:
        - name: temp
          emptyDir: {}
      # Topology spread for better availability
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: microfastify
